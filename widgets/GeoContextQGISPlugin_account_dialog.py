# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GeoContextQGISPlugin_options_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os

from PyQt5.QtWidgets import QDialog
from qgis.PyQt import uic
from qgis.PyQt.QtCore import pyqtSignal, QUrl
from qgis.core import QgsSettings

from .geocontext_help_dialog import HelpDialog

# Import the PyQt and QGIS libraries
# this import required to enable PyQt API v2
# do it before Qt imports

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'GeoContextQGISPlugin_account_dialog_base.ui'))


class AccountDialog(QDialog, FORM_CLASS):
    def __init__(self, iface, parent=None):
        """Constructor."""
        super(AccountDialog, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        QDialog.__init__(self, parent)
        self.setupUi(self)

        self.iface = iface

        # Sets the options according what the user has it previously set/saved using the options dialog
        settings = QgsSettings()

        # Button clicks
        self.btnHelp.clicked.connect(self.help_btn_click)  # Triggers when the Help button is pressed

    def help_btn_click(self):
        self.show_help()

    def set_user(self):
        """Sets the user docs provided by the user. This can be set using
        this dialog
        """

        settings = QgsSettings()
        user = self.lineUser.value()

        settings.setValue('geocontext-qgis-plugin/user', user)

    def set_password(self):
        """Sets the user password provided by the user. This can be set using
        this dialog
        """

        settings = QgsSettings()
        password = self.linePassword.value()

        settings.setValue('geocontext-qgis-plugin/password', password)

    def show_help(self):
        """Opens the help dialog. The dialog displays the html documentation.
        The documentation contains information on the options dialog.
        """

        # Directory of the docking_panel.html file used for the help option
        help_file_dir = '%s/resources/help/build/html/options_dialog.html' % os.path.dirname(os.path.dirname(__file__))
        help_file = 'file:///%s/resources/help/build/html/options_dialog.html' % os.path.dirname(os.path.dirname(__file__))

        # Checks whether the required html document exist
        if os.path.exists(help_file_dir):
            results_dialog = HelpDialog()
            results_dialog.web_view.load(QUrl(help_file))
            results_dialog.exec_()
        # Skips showing the help file because the plugin cannot find it
        else:
            error_msg = "Cannot find the /resources/help/build/html/options_dialog.html file. Cannot open the help dialog."
            self.iface.messageBar().pushCritical("Missing file: ", error_msg)
